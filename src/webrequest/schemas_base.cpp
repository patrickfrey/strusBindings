/*
 * Copyright (c) 2019 Patrick P. Frey
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
/* \brief Defining common datastructures used to define schemas
 * @file schemas_base.hpp
 */
#include "schemas_base.hpp"
#include "private/internationalization.hpp"
using namespace strus;
using namespace strus::webrequest;

const char* AutomatonNameSpace::itemName( int itemid)
{
	struct ItemDef {Item id; const char* name;};
	static ItemDef ar[ NofItemDefinitions+1] = {
		{NullValue, "null value"},
		{ModuleDir, "module directory"},
		{ModuleName, "module name"},
		{ResourceDir, "resource directory"},
		{WorkDir, "work directory"},
		{ContextConfig, "context configuration"},
		{ContextThreads, "context threads"},
		{ContextRpc, "context rpc"},
		{ContextTrace, "context trace"},
		{TraceLogType, "trace log type"},
		{TraceLogFile, "trace log file"},
		{TraceGroupBy, "trace group by"},
		{TraceCall, "trace call"},
		{TraceCount, "trace count"},
		{StatisticsMapConfig, "statistics map configuration"},
		{StatisticsProc, "statistics proc"},
		{StatisticsMapBlocks, "statistics map blocks"},
		{StatisticsStorageServer, "statistics storage server"},
		{StatisticsBlob, "statistics blob"},
		{StorageConfig, "storage configuration"},
		{DatabaseEngine, "database engine"},
		{DatabasePath, "database path"},
		{StorageCachedTerms, "storage cached terms"},
		{StorageMetadata, "storage metadata"},
		{StorageMetadataName, "storage metadata name"},
		{StorageMetadataType, "storage metadata type"},
		{StorageEnableAcl, "storage enable acl"},
		{DatabaseEnableCompression, "database enable compression"},
		{DatabaseEnableAutoCompact, "database enable auto compact"},
		{DatabaseLruCacheSize, "database lru cache size"},
		{DatabaseMaxNofOpenFiles, "database maximum number of open files"},
		{DatabaseWriteBufferSize, "database write buffer size"},
		{DatabaseBlockSize, "database block size"},
		{VectorMemType, "vector mem type"},
		{VectorLexemPrunning, "vector lexem prunning"},
		{VectorDim, "vector dimension"},
		{VectorBits, "vector bits"},
		{VectorVariations, "vector variations"},
		{VectorFeatureName, "vector feature name"},
		{VectorFeatureType, "vector feature type"},
		{VectorFeatureVector, "vector feature vector"},
		{VectorFeature, "vector feature"},
		{AnalyzerName, "analyzer name"},
		{Segmenter, "segmenter"},
		{MimeType, "mime type"},
		{Charset, "charset"},
		{Schema, "schema"},
		{DocumentClassDef, "document class definition"},
		{SubDocumentName, "sub document name"},
		{SubDocumentSelect, "sub document select"},
		{SubContentClassDef, "sub content class definition"},
		{SubContentSelect, "sub content select"},
		{AnalyzerElement, "analyzer element"},
		{FeatureTypeName, "feature type name"},
		{FieldTypeName, "field type name"},
		{FieldValue, "field value"},
		{SelectExpression, "select expression"},
		{FeatureOptionPosition, "feature option position"},
		{FeatureOptionDef, "feature option definition"},
		{FeaturePriority, "feature priority"},
		{PatternTypeName, "pattern type name"},
		{PatternMatcherModule, "pattern matcher module"},
		{PatternMatcherLexemTypes, "pattern matcher lexem types"},
		{PatternMatcherPatternDef, "pattern matcher pattern definition"},
		{PatternRuleName, "pattern rule name"},
		{PatternRuleVisible, "pattern rule visible"},
		{PatternRuleExpression, "pattern rule expression"},
		{AggregatorName, "aggregator name"},
		{AggregatorArg, "aggregator argument"},
		{AggregatorDef, "aggregator definition"},
		{TokenizerName, "tokenizer name"},
		{TokenizerArg, "tokenizer argument"},
		{TokenizerDef, "tokenizer definition"},
		{NormalizerName, "normalizer name"},
		{NormalizerArg, "normalizer argument"},
		{NormalizerDef, "normalizer definition"},
		{JoinOperatorName, "join operator name"},
		{JoinOperatorRange, "join operator range"},
		{JoinOperatorCardinality, "join operator cardinality"},
		{GroupBy, "group by"},
		{MinWeight, "minumum weight"},
		{DocumentDef, "document definition"},
		{DocumentDefList, "document definition list"},
		{DocumentId, "document identifier"},
		{DocumentAccess, "document access"},
		{DocumentAttributeDef, "document attribute definition"},
		{DocumentAttributeName, "document attribute name"},
		{DocumentAttributeValue, "document attribute value"},
		{DocumentMetaDataDef, "document meta data definition"},
		{DocumentMetaDataName, "document meta data name"},
		{DocumentMetaDataValue, "document meta data value"},
		{DocumentSearchIndexFeatureDef, "document search index feature definition"},
		{DocumentForwardIndexFeatureDef, "document forward index feature definition"},
		{DocumentFeatureType, "document feature type"},
		{DocumentFeatureValue, "document feature value"},
		{DocumentFeaturePos, "document feature position"},
		{DocumentFeatureLen, "document feature length"},
		{ContentAttribute, "content attribute"},
		{ContentRegexExpression, "content regex expression"},
		{ContentPriorityExpression, "content priority expression"},
		{ContentMinLength, "content minumum length"},
		{ContentMaxLength, "content maximum length"},
		{SentenceAnalyzerSeparatorChar, "sentence analyzer separator character"},
		{SentenceAnalyzerSpaceChar, "sentence analyzer space character"},
		{SentenceAnalyzerLinkChar, "sentence analyzer link character"},
		{SentenceAnalyzerLinkSubst, "sentence analyzer link substitution"},
		{SentenceAnalyzerLinkDef, "sentence analyzer link definition"},
		{SentenceAnalyzerSentenceTermType, "sentence analyzer sentence term type"},
		{SentenceAnalyzerSentenceTermValue, "sentence analyzer sentence term value"},
		{SentenceAnalyzerSentencePatternWeight, "sentence analyzer sentence pattern weight"},
		{SentenceAnalyzerSentencePatternOp, "sentence analyzer sentence pattern operator"},
		{SentenceAnalyzerSentencePatternMinOccurrence, "sentence analyzer sentence pattern minumum occurrence"},
		{SentenceAnalyzerSentencePatternMaxOccurrence, "sentence analyzer sentence pattern maximum occurrence"},
		{SentenceAnalyzerSentencePattern, "sentence analyzer sentence pattern"},
		{SentenceAnalyzerSentenceConfig, "sentence analyzer sentence configuration"},
		{SentenceAnalyzerSentenceName, "sentence analyzer sentence name"},
		{SentenceAnalyzerSentenceWeight, "sentence analyzer sentence weight"},
		{SentenceAnalyzerConfig, "sentence analyzer configuration"},
		{QueryDef, "query definition"},
		{FeatureDef, "feature definition"},
		{FeatureSet, "feature set"},
		{FeatureWeight, "feature weight"},
		{RestrictionDef, "restriction definition"},
		{FeatureRestrictionDef, "feature restriction definition"},
		{FeatureSelectionDef, "feature selection definition"},
		{FeatureExclusionDef, "feature exclusion definition"},
		{QueryEvalFunctionResultName, "query evaluation function result name"},
		{QueryEvalFunctionResultValue, "query evaluation function result value"},
		{QueryEvalFunctionResult, "query evaluation function result"},
		{QueryEvalFunctionParameterName, "query evaluation function parameter name"},
		{QueryEvalFunctionParameterValue, "query evaluation function parameter value"},
		{QueryEvalFunctionParameter, "query evaluation function parameter"},
		{QueryEvalFunctionFeatureRole, "query evaluation function feature role"},
		{QueryEvalFunctionFeatureSet, "query evaluation function feature set"},
		{QueryEvalFunctionFeature, "query evaluation function feature"},
		{QueryEvalFunctionName, "query evaluation function name"},
		{QueryEvalFormulaSource, "query evaluation formula source"},
		{QueryEvalSummarizer, "query evaluation summarizer"},
		{QueryEvalWeighting, "query evaluation weighting"},
		{QueryEvalFormulaParameterName, "query evaluation formula parameter name"},
		{QueryEvalFormulaParameterValue, "query evaluation formula parameter value"},
		{QueryEvalFormulaParameter, "query evaluation formula parameter"},
		{QueryResult, "query result"},
		{QueryEvalPass, "query evaluation pass"},
		{QueryNofRanked, "query number of ranked"},
		{QueryNofVisited, "query number of visited"},
		{QueryRank, "query rank"},
		{QueryRankDocno, "query rank internal document number"},
		{QueryRankWeight, "query rank weight"},
		{QueryRankSummary, "query rank summary"},
		{QueryRankSummaryName, "query rank summary name"},
		{QueryRankSummaryValue, "query rank summary value"},
		{QueryRankSummaryWeight, "query rank summary weight"},
		{QueryRankSummaryIndex, "query rank summary index"},
		{DistQueryEvalStorageServer, "distributed query evaluation storage server"},
		{DistQueryEvalStatisticsServer, "distributed query evaluation statistics server"},
		{TermExpression, "term expression"},
		{NodeTerm, "node term"},
		{NodeExpression, "node expression"},
		{ExpressionArg, "expression argument"},
		{ExpressionVariableName, "expression variable name"},
		{TermType, "term type"},
		{TermValue, "term value"},
		{TermLen, "term length"},
		{MetaDataCondition, "meta data condition"},
		{MetaDataUnionCondition, "meta data union condition"},
		{MetaDataConditionOp, "meta data condition operator"},
		{MetaDataConditionName, "meta data condition name"},
		{MetaDataConditionValue, "meta data condition value"},
		{MetaDataRangeFrom, "meta data range from"},
		{MetaDataRangeTo, "meta data range to"},
		{TermStats, "term statistics"},
		{TermDocumentFrequency, "term document frequency"},
		{CollectionNofDocs, "collection number of documents"},
		{GlobalStats, "global statistics"},
		{Docno, "internal document number"},
		{NumberOfResults, "number of results"},
		{FirstResult, "first result"},
		{MergeResult, "merge result"},
		{AccessRight, "access right"},
		{VariableName, "variable name"},
		{VariableValue, "variable value"},
		{VariableDef, "variable definition"},
		{DebugModeFlag, "debug mode flag"},
		{IncludeContextName, "include context name"},
		{NofItemDefinitions, "number of item definitions"},
	};
	const ItemDef& idef = ar[ (AutomatonNameSpace::Item)itemid];
	if (idef.id != (AutomatonNameSpace::Item)itemid) throw strus::runtime_error( _TXT("internal: badly defined table of automaton items"));
	return idef.name;
}


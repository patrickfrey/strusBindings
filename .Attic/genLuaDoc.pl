#!/usr/bin/perl

use strict;
use warnings;
use 5.010;

my $num_args = $#ARGV + 1;
if ($num_args == 0)
{
	print STDERR "Usage: splitLuaDocFile.pl <inputfile>\n";
	print STDERR "<inputfile>: name of input file to process\n";
	exit;
}

my $inputfile = $ARGV[0];
my $extension = "";
if ($inputfile =~ m/([\.][^\.]+)$/)
{
	$extension = $1;
}
print STDERR "process file $inputfile\n";
open( INPUT, "<$inputfile") or die "Couldn't open file $inputfile, $!";

sub writeFile
{
	my ($filename, $content) = @_;
	open( OUTFILE, ">$filename") or die "Couldn't open file $filename, $!";
	print OUTFILE $content;
	close OUTFILE;
}

my $header = "";
my $content = "";
my $outputfile = undef;
my $line;
my $src;
# Variables:
my $project = undef;
my $project_description = undef;
my $author = undef;
my $copyright = undef;
my $license = undef;
my $release = undef;
my $class = undef;
my $class_description = undef;
my $function = undef;
my $current = undef;
my $description = undef;
my %param = {};

sub writeModuleFile
{
	my ($name) = @_;
	my $template = <<'END_TEMPLATE';
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<head>
    <title>$project lua interface documentation</title>
    <link rel="stylesheet" href="ldoc.css" type="text/css" />
</head>
<body>
<div id="container">
<div id="product">
        <div id="product_logo">$project.jpg</div>
        <div id="product_name">$project</div>
        <div id="product_description"></div>
</div> <!-- id="product" -->


<div id="main">


<!-- Menu -->

<div id="navigation">
<br/>
<h1>strus</h1>




<h2>Modules</h2>
<ul class="nowrap">
  <li><a href="modules/example1.html">example1</a></li>
  <li><a href="modules/example2.html">example2</a></li>
</ul>

</div>

<div id="content">



<h2>Modules</h2>
<table class="module_list">
        <tr>
                <td class="name"  nowrap><a href="modules/example1.html">example1</a></td>
                <td class="summary"></td>
        </tr>
        <tr>
                <td class="name"  nowrap><a href="modules/example2.html">example2</a></td>
                <td class="summary"></td>
        </tr>
</table>

</div>
</div>
<div id="about">
<i>generated by <a href="genLuaDoc.pl">papuga 0.0.0</a></i>
</div>
</div>
</body>
</html>

END_TEMPLATE
}


while (<INPUT>)
{
	chomp;
	$line = $_;
	if (/^[\-][\-]+\s*[^@](\S.*)$/)
	{
		if ($current)
		{
			$current .= $1 . "\n";
		}
	}
	else if (/^[\-][\-]\s*[@]file\s+(\S.*)$/)
	{
		if ($outputfile)
		{
			writeFile( $outputfile . $extension, $content);
		}
		$outputfile = $1;
	}
	elsif  (/^[\-][\-]\s*[@]project\s+(\S.*)$/)
	{
		$project = $1;
	}
	elsif  (/^[\-][\-]\s*[@]author\s+(\S.*)$/)
	{
		$author = $1;
	}
	elsif  (/^[\-][\-]\s*[@]copyright\s+(\S.*)$/)
	{
		$copyright = $1;
	}
	elsif  (/^[\-][\-]\s*[@]license\s+(\S.*)$/)
	{
		$license = $1;
	}
	elsif  (/^[\-][\-]\s*[@]release\s+(\S.*)$/)
	{
		$release = $1;
	}
	elsif  (/^[\-][\-]\s*[@]class\s+(\S.*)$/)
	{
		$class = $1;
	}
	elsif  (/^[\-][\-]\s*[@]brief\s+(\S.*)$/)
	{
		$brief = $1;
	}
	elsif  (/^[\-][\-]\s*[@]function\s+(\S.*)$/)
	{
		$function = $1;
	}
	elsif  (/^[\-][\-]\s*[@]param\s+([A-Za-z0-9_]+)\s(\S.*)$/)
	{
		$param{$1} = $2;
	}
	elsif  (/^[\-][\-]\s*[@]([a-zA-Z0-9]+)\s+(\S.*)$/)
	{
		die "unknown tag $1";
	}
	else
	{
		$current = undef;
	}
}

if ($outputfile)
{
	writeFile( $outputfile . $extension, $content);
}
else
{
	die "no output file tag found";
}

